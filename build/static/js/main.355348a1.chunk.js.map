{"version":3,"sources":["Components/wallpaper_item.js","Components/wallpaper.js","Components/search_bar.js","Components/App.js","serviceWorker.js","index.js"],"names":["WallpaperItem","_ref","file","data","preview","enabled","console","log","previewImage","images","resolutions","length","url","replace","subreddit","post_link","permalink","react_default","a","createElement","className","href","target","rel","over_18","src","width","alt","title","source","height","Wallpapers","files","map","wallpaper_item","key","id","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","_this2","type","onChange","event","search","value","name","placeholder","setState","onSearchTermChange","React","Component","App","subReddit","after","before","page","loadNextPage","fetch","then","response","json","children","window","scrollTo","catch","loadPrevPage","newState","wallpaperSubreddits","catsSubreddits","subredditsArray","portraitSubreddits","memesSubreddits","updatePage","sub","contentJSX","_this3","searchSubreddit","_","debounce","pageJSX","nextBtn","onClick","prevBtn","wallpaper","currentSubreddit","style","display","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","index","search_bar","Boolean","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.355348a1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WallpaperItem = ({ file }) => {\r\n  if (file.data.preview) {\r\n    if (file.data.preview.enabled) {\r\n      console.log(file.data);\r\n      let previewImage =\r\n        file.data.preview.images[0].resolutions[\r\n          file.data.preview.images[0].resolutions.length - 1\r\n        ].url;\r\n      previewImage = previewImage.replace(/&amp;/g, \"&\");\r\n      let subreddit = \"https://reddit.com/r/\" + file.data.subreddit;\r\n      let post_link = \"https://reddit.com\" + file.data.permalink;\r\n      return (\r\n        <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n          <div className=\" card-link\">\r\n            <div className=\"card\">\r\n              <div className=\"card-img-top\">\r\n                <a href={post_link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {\" \"}\r\n                  <button className=\"btn btn-secondary btn-sm top-right-float\">\r\n                    {\" \"}\r\n                    View Post{\" \"}\r\n                  </button>\r\n                </a>\r\n                <a\r\n                  href={file.data.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {\" \"}\r\n                  {file.data.over_18 ? (\r\n                    <div className=\"p-4\"> NSFW </div>\r\n                  ) : (\r\n                    <img\r\n                      src={previewImage}\r\n                      className=\"card-img-top\"\r\n                      width=\"100%\"\r\n                      alt={file.data.title}\r\n                    />\r\n                  )}{\" \"}\r\n                </a>{\" \"}\r\n              </div>{\" \"}\r\n              <div className=\"card-body\">\r\n                <div className=\"card-title\">\r\n                  <a\r\n                    href={file.data.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {\" \"}\r\n                    {file.data.title}{\" \"}\r\n                  </a>{\" \"}\r\n                </div>{\" \"}\r\n                <p className=\"card-text\">\r\n                  Resolution: {file.data.preview.images[0].source.width}x{\" \"}\r\n                  {file.data.preview.images[0].source.height} <br /> Posted on:{\" \"}\r\n                  <a href={subreddit} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {\" \"}\r\n                    r / {file.data.subreddit}{\" \"}\r\n                  </a>{\" \"}\r\n                </p>{\" \"}\r\n              </div>{\" \"}\r\n            </div>{\" \"}\r\n          </div>{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return <div> </div>;\r\n};\r\n\r\nexport default WallpaperItem;\r\n","import React from \"react\";\r\nimport WallpaperItem from \"./wallpaper_item.js\";\r\n\r\nconst Wallpapers = ({ files }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {files.map(file => (\r\n        <WallpaperItem key={file.data.id} file={file} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wallpapers;\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <div className=\"input-group mb-2\">\r\n          <div className=\"input-group-prepend\">\r\n            <div className=\"input-group-text\"> r / </div>{\" \"}\r\n          </div>{\" \"}\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onChange={event => this.search(event.target.value)}\r\n            value={this.state.term}\r\n            name=\"search\"\r\n            placeholder=\"wallpapers\"\r\n          />\r\n        </div>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  search(term) {\r\n    this.setState({ term });\r\n    this.props.onSearchTermChange(term);\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport Wallpapers from \"./wallpaper\";\nimport _ from \"lodash\";\nimport SearchBar from \"./search_bar\";\n\nclass App extends Component {\n  state = {\n    subReddit: \"aww\", //nature_by_default\n    files: [],\n    after: null,\n    before: null,\n    page: 1\n  };\n\n  constructor(props) {\n    super(props);\n    this.url = \"https://www.reddit.com/r/\";\n    this.wallpaperSubreddits = \"wallpapers\";\n    this.catsSubreddits = \"cats\";\n    this.subredditsArray = [\n      \"wallpaper\",\n      \"wallpapers\",\n      \"widescreenwallpaper\",\n      \"wqhd_wallpaper\",\n      \"memes\",\n      \"dankmemes\",\n      \"memeeconomy\",\n      \"animemes\",\n      \"mobilewallpapers\",\n      \"amoledbackgrounds\",\n      \"verticalwallpapers\"\n    ];\n    this.portraitSubreddits =\n      \"mobilewallpapers+amoledbackgrounds+verticalwallpapers\";\n    this.memesSubreddits = \"memes+dankmemes+memeeconomy+animemes\";\n  }\n\n  componentDidMount() {\n    this.updatePage(this.state.subReddit);\n  }\n\n  updatePage(sub) {\n    // Resetting the State\n    this.setState({\n      files: [],\n      subReddit: sub,\n      page: 1\n    });\n\n    fetch(this.url + sub + \".json?limit=35&count=\" + this.state.page * 35)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          files: data.data.children,\n          after: data.data.after, //to get the next set of post\n          before: data.data.before //to load previous post if any\n        });\n        window.scrollTo(0, 0);\n      })\n      .catch(console.log);\n  }\n\n  loadNextPage = () => {\n    this.setState({\n      files: []\n    });\n    fetch(\n      this.url +\n        this.state.subReddit +\n        \".json?limit=35\" +\n        \"&after=\" +\n        this.state.after +\n        \"&count=\" +\n        this.state.page * 35\n    )\n      .then(response => response.json())\n      .then(data => {\n        this.setState(() => ({\n          files: data.data.children,\n          after: data.data.after,\n          before: data.data.before,\n          page: this.state.page + 1\n        }));\n        window.scrollTo(0, 0);\n      })\n\n      .catch(console.log);\n  };\n\n  loadPrevPage = () => {\n    this.setState({\n      files: []\n    });\n    fetch(\n      this.url +\n        this.state.subReddit +\n        \".json?limit=35\" +\n        \"&before=\" +\n        this.state.before +\n        \"&count=\" +\n        ((this.state.page - 1) * 35 - 1)\n    )\n      .then(response => response.json())\n      .then(data => {\n        let newState = {\n          files: data.data.children,\n          after: data.data.after,\n          before: data.data.before\n        };\n\n        if (this.state.page > 1) newState.page = this.state.page - 1;\n        this.setState(newState);\n      })\n      .catch(console.log);\n  };\n\n  searchSubreddit(subreddit) {\n    if (subreddit.length !== 0) {\n      this.updatePage(subreddit);\n    } else {\n      this.updatePage(this.state.subReddit);\n    }\n  }\n\n  render() {\n    const searchSubreddit = _.debounce(term => {\n      this.searchSubreddit(term);\n    }, 600);\n    let contentJSX;\n    if (this.state.files.length > 0) {\n      let pageJSX;\n      const nextBtn = (\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          onClick={this.loadNextPage}\n        >\n          next\n        </button>\n      );\n      const prevBtn = (\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          onClick={this.loadPrevPage}\n        >\n          prev\n        </button>\n      );\n\n      if (this.state.after === null && this.state.before !== null) {\n        pageJSX = <div>{prevBtn}</div>;\n      } else if (this.state.after !== null && this.state.before === null) {\n        pageJSX = <div>{nextBtn}</div>;\n      } else if (this.state.after !== null && this.state.before !== null) {\n        pageJSX = (\n          <div>\n            {prevBtn}\n            <span className=\"p-3 text-black-50\">Page {this.state.page}</span>\n            {nextBtn}\n          </div>\n        );\n      } else {\n        pageJSX = <div>No Posts Found.</div>;\n      }\n      contentJSX = (\n        <div className=\"m-2\">\n          <Wallpapers files={this.state.files} />\n          <br />\n          <div className=\"center-block m-2\">{pageJSX}</div>\n        </div>\n      );\n    } else {\n      contentJSX = <div className=\"p-2\">Loading...</div>;\n    }\n\n    let currentSubreddit = \"r/\" + this.state.subReddit;\n\n    return (\n      <div className=\"container\">\n        <br />\n        <div>\n          <div className=\"dropdown m-2\" style={{ display: \"inline\" }}>\n            <button\n              className=\"btn btn-outline-success dropdown-toggle\"\n              type=\"button\"\n              id=\"dropdownMenuButton\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              {currentSubreddit} &nbsp;\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              <a\n                className=\"dropdown-item\"\n                href=\"#subChange\"\n                onClick={() => this.updatePage(this.wallpaperSubreddits)}\n              >\n                Landscape Wallpapers\n              </a>\n              <a\n                className=\"dropdown-item\"\n                href=\"#subChange\"\n                onClick={() => this.updatePage(this.portraitSubreddits)}\n              >\n                Portrait Wallpapers\n              </a>\n              <a\n                className=\"dropdown-item\"\n                href=\"#subChange\"\n                onClick={() => this.updatePage(this.memesSubreddits)}\n              >\n                Memes Subreddits\n              </a>\n              {this.subredditsArray.map((subreddit, index) => (\n                <a\n                  className=\"dropdown-item\"\n                  key={index}\n                  href=\"#subChange\"\n                  onClick={() => this.updatePage(subreddit)}\n                >\n                  r/{subreddit}\n                </a>\n              ))}\n            </div>\n          </div>\n          <div className=\"m-3\" />\n          <SearchBar onSearchTermChange={term => searchSubreddit(term)} />\n        </div>\n        <br />\n        {contentJSX}\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}